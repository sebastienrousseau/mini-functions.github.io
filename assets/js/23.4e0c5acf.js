(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{217:function(e,t,s){"use strict";s.r(t);var n=s(5),a=Object(n.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"qrcode"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#qrcode"}},[e._v("#")]),e._v(" QRCode")]),e._v(" "),t("p",[e._v("QRCode est une bibliothèque Rust qui fournit des fonctions faciles à utiliser pour\npour générer des images de codes QR au format PNG ou SVG.")]),e._v(" "),t("h2",{attrs:{id:"utilisation"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#utilisation"}},[e._v("#")]),e._v(" Utilisation")]),e._v(" "),t("p",[e._v("Pour utiliser la bibliothèque QRCode, ajoutez ce qui suit à votre fichier Cargo.toml :")]),e._v(" "),t("div",{staticClass:"language-toml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-toml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("dépendances"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token key property"}},[e._v("qrcode")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"0.8"')]),e._v("\n")])])]),t("p",[e._v("Ensuite, ajoutez ce qui suit à votre code Rust :")]),e._v(" "),t("p",[e._v("``rust\nextern crate image ;\nextern crate qrcode ;")]),e._v(" "),t("p",[e._v("use image::{ImageBuffer, Rgb, RgbImage} ;\nuse qrcode::render::svg ;\nutiliser qrcode::QrCode ;")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("\nEnsuite, vous pouvez créer une nouvelle structure QRCode avec les données que vous voulez\nencoder dans le code QR :\n\n  ``Vous pouvez\nlet qr_code = QRCode::new(vec ![1, 2, 3]) ;\n")])])]),t("p",[e._v("Vous pouvez également créer une structure QRCode à partir d'une chaîne ou d'un vecteur d'octets :")]),e._v(" "),t("p",[e._v('let qr_code = QRCode::from_string("Hello, world !".to_string()) ;\nlet qr_code = QRCode::from_bytes(vec ![72, 101, 108, 108, 111, 44, 32, 119, 111, 114, 108, 100, 33]) ;')]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("\nUne fois que vous avez une structure `QRCode`, vous pouvez utiliser les méthodes suivantes pour\ngénérer des images de code QR :\n\n- `to_qrcode` : crée une nouvelle valeur `QrCode` en utilisant les données stockées dans\n  la structure `QRCode`.\n- `to_png` : crée une nouvelle image `PNG` du code QR en utilisant les données\n  stockées dans la structure `QRCode`.\n- `to_svg` : crée une nouvelle image `SVG` du code QR en utilisant les données\n  stockées dans la structure `QRCode`.\n- `colorize` : crée une nouvelle image `PNG` du code QR en utilisant les données\n  données stockées dans la structure `QRCode` et une valeur de couleur donnée pour coloriser le\n  code QR\n\n## Exemples\n\nVoici un exemple de génération d'une image PNG d'un code QR :\n\n  ``Brust\nlet qr_code = QRCode::new(vec ![1, 2, 3]) ;\nlet png_image = qr_code.to_png() ;\n")])])]),t("p",[e._v("Et voici un exemple de génération d'une image SVG d'un code QR :")]),e._v(" "),t("div",{staticClass:"language-rust extra-class"},[t("pre",{pre:!0,attrs:{class:"language-rust"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("let")]),e._v(" qr_code "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("QRCode")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("::")]),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("new")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("vec "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("let")]),e._v(" svg_image "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" qr_code"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("to_svg")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])]),t("h2",{attrs:{id:"licence"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#licence"}},[e._v("#")]),e._v(" Licence")]),e._v(" "),t("p",[e._v("QRCode est sous licence Apache, version 2.0 et MIT.\nlicence MIT.")]),e._v(" "),t("p",[e._v("Traduit avec www.DeepL.com/Translator (version gratuite)")])])}),[],!1,null,null,null);t.default=a.exports}}]);